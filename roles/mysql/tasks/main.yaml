   - name: install mysql modules
     ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - PyMySQL
    - cryptography
      
   - name: install mysql server
     ansible.builtin.dnf:
      name: mysql-server
      state: installed
  
   - name: enable and start mysql service.
     ansible.builtin.service:
      name: mysqld
      state: started
      enabled: yes
   - name: connect to mysql to validate if root password is set
     community.mysql.mysql_info:
      login_user: root
      login_password: "{{ lookup('amazon.aws.aws_ssm', '/expense/mysql/mysql_root_passowrd', decrypt=True ) }}"
      login_host: mysql.devdom.fun
     register: mysql_info
     ignore_errors: true #continue with the program execution if there are any error. DEfault behaviour here is to terminate.

   - name: print the output
     ansible.builtin.debug:
      msg: "{{ mysql_info }}"
  
   - name: set root user password.
     ansible.builtin.command: mysql_secure_installation --set-root-pass ExpenseApp@1
     when: mysql_info.failed is true
